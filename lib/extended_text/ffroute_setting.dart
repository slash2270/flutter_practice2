// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************
// ignore_for_file: prefer_const_literals_to_create_immutables,unused_local_variable,unused_import,unnecessary_import
import 'package:ff_annotation_route_library/ff_annotation_route_library.dart';
import 'package:flutter/widgets.dart';
import 'package:permission_handler/permission_handler.dart';

import 'extended_background_text_demo.dart';
import 'extended_custom_text_overflow_demo.dart';
import 'extended_join_zero_width_space.dart';
import 'extended_mainpage_demo.dart';
import 'extended_regexp_text_demo.dart';
import 'extended_text_demo.dart';
import 'extended_text_selection_demo.dart';

FFRouteSettings getRouteSettings({
  required String name,
  Map<String, dynamic>? arguments,
  PageBuilder? notFoundPageBuilder,
}) {
  final Map<String, dynamic> safeArguments = arguments ?? const <String, dynamic>{};
  switch (name) {
    case 'fluttercandies://BackgroundTextDemo':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => const ExtendedBackgroundTextDemo(),
        routeName: 'BackgroundText',
        description: 'workaround for issue 24335/24337 about background',
      );
    case 'fluttercandies://CustomTextOverflowDemo':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => const ExtendedCustomTextOverflowDemo(),
        routeName: 'CustomTextOverflow',
        description: 'workaround for issue 26748. how to custom text overflow',
      );
    case 'fluttercandies://JoinZeroWidthSpace':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => ExtendedJoinZeroWidthSpaceDemo(),
        routeName: 'JoinZeroWidthSpace',
        description: 'make line breaking and overflow style better, workaround for issue 18761.',
      );
    case 'fluttercandies://RegExpTextDemo':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => const ExtendedRegExpTextDemo(),
        routeName: 'RegExText',
        description: 'quickly build special text with RegExp',
      );
    case 'fluttercandies://TextDemo':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => const ExtendedTextDemo(),
        routeName: 'Text',
        description: 'quickly build special text',
      );
    case 'fluttercandies://TextSelectionDemo':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => const ExtendedTextSelectionDemo(),
        routeName: 'TextSelection',
        description: 'text selection support',
      );
    case 'fluttercandies://mainpage':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => ExtendedMainPage(),
        routeName: 'MainPage',
      );
    default:
      return FFRouteSettings(
        name: FFRoute.notFoundName,
        routeName: FFRoute.notFoundRouteName,
        builder: notFoundPageBuilder ?? () => Container(),
      );
  }
}