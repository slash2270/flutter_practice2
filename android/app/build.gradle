def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_practice2"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        //minSdkVersion 20 //flutter.minSdkVersion   map必須20
        //targetSdkVersion flutter.targetSdkVersion
        minSdkVersion 21
        targetSdkVersion 33 //flutter.targetSdkVersion
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        debug {
            // for proguard verification
            //minifyEnabled true
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            signingConfig signingConfigs.debug
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.play:core:1.8.0"
    implementation "androidx.multidex:multidex:2.0.1"

    // -------------------------------------------------------------------------------------
    // CAUTION: The following instruction is for developping and debugging the Flauto Engine
    // DO NOT INCLUDE THE FOLLOWING LINE IN A REAL APP !!!
    //implementation project(':flutter_sound_core')
    implementation 'com.github.canardoux:flutter_sound_core:9.2.13'
    // ------------------------------------------------------------------------------------
    //def exoplayer_version = "...specify-version-here...."
    //implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    //implementation "com.google.android.exoplayer:exoplayer-dash:$exoplayer_version"
    //implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer_version"
    //implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoplayer_version"
}
